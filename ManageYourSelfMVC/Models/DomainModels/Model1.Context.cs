//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManageYourSelfMVC.Models.DomainModels
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ManageYourSelfEntities : DbContext
    {
        public ManageYourSelfEntities()
            : base("name=ManageYourSelfEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<Cat> Cats { get; set; }
        public virtual DbSet<ContentTbl> ContentTbls { get; set; }
        public virtual DbSet<LogTBL> LogTBLs { get; set; }
        public virtual DbSet<ManageTime> ManageTimes { get; set; }
        public virtual DbSet<Mazaya> Mazayas { get; set; }
        public virtual DbSet<RoutineJob> RoutineJobs { get; set; }
        public virtual DbSet<RoutineJobHa> RoutineJobHas { get; set; }
        public virtual DbSet<Seyed> Seyeds { get; set; }
        public virtual DbSet<Sport> Sports { get; set; }
        public virtual DbSet<StoreHoghogh> StoreHoghoghs { get; set; }
        public virtual DbSet<Timing> Timings { get; set; }
        public virtual DbSet<TitleTbl> TitleTbls { get; set; }
        public virtual DbSet<BaseDaramadData> BaseDaramadDatas { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Daramad> Daramads { get; set; }
        public virtual DbSet<DataCard> DataCards { get; set; }
        public virtual DbSet<DaysExercise> DaysExercises { get; set; }
        public virtual DbSet<dic_tbl> dic_tbl { get; set; }
        public virtual DbSet<example_tbl> example_tbl { get; set; }
        public virtual DbSet<HolyDay> HolyDays { get; set; }
        public virtual DbSet<IODayly> IODaylies { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<KarKard> KarKards { get; set; }
        public virtual DbSet<Kharj> Kharjs { get; set; }
        public virtual DbSet<KharjType> KharjTypes { get; set; }
        public virtual DbSet<MasterData> MasterDatas { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<Menuha> Menuhas { get; set; }
        public virtual DbSet<MojoodyBank> MojoodyBanks { get; set; }
        public virtual DbSet<MVCHomeHeaderThree> MVCHomeHeaderThrees { get; set; }
        public virtual DbSet<PercentJob> PercentJobs { get; set; }
        public virtual DbSet<Player> Players { get; set; }
        public virtual DbSet<PlayerScore> PlayerScores { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }
        public virtual DbSet<SliderPhoto> SliderPhotoes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Taghvim> Taghvims { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<TypeHazineh> TypeHazinehs { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<back_MasterData> back_MasterData { get; set; }
        public virtual DbSet<example_tbl_backup_980122> example_tbl_backup_980122 { get; set; }
        public virtual DbSet<dic_tbl_LOG> dic_tbl_LOG { get; set; }
    
        public virtual int c(string eng_word)
        {
            var eng_wordParameter = eng_word != null ?
                new ObjectParameter("eng_word", eng_word) :
                new ObjectParameter("eng_word", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("c", eng_wordParameter);
        }
    
        public virtual int CreateLogTbl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateLogTbl");
        }
    
        public virtual int CreateTaghvimShamsy(Nullable<int> firstDayOneToSeven, Nullable<int> firstDate, Nullable<int> lastDate)
        {
            var firstDayOneToSevenParameter = firstDayOneToSeven.HasValue ?
                new ObjectParameter("FirstDayOneToSeven", firstDayOneToSeven) :
                new ObjectParameter("FirstDayOneToSeven", typeof(int));
    
            var firstDateParameter = firstDate.HasValue ?
                new ObjectParameter("FirstDate", firstDate) :
                new ObjectParameter("FirstDate", typeof(int));
    
            var lastDateParameter = lastDate.HasValue ?
                new ObjectParameter("LastDate", lastDate) :
                new ObjectParameter("LastDate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateTaghvimShamsy", firstDayOneToSevenParameter, firstDateParameter, lastDateParameter);
        }
    
        public virtual ObjectResult<DarsadKarkard_Result> DarsadKarkard(string sdate, string edate)
        {
            var sdateParameter = sdate != null ?
                new ObjectParameter("Sdate", sdate) :
                new ObjectParameter("Sdate", typeof(string));
    
            var edateParameter = edate != null ?
                new ObjectParameter("Edate", edate) :
                new ObjectParameter("Edate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DarsadKarkard_Result>("DarsadKarkard", sdateParameter, edateParameter);
        }
    
        public virtual int InsertExample(Nullable<int> idWord, string example)
        {
            var idWordParameter = idWord.HasValue ?
                new ObjectParameter("IdWord", idWord) :
                new ObjectParameter("IdWord", typeof(int));
    
            var exampleParameter = example != null ?
                new ObjectParameter("example", example) :
                new ObjectParameter("example", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertExample", idWordParameter, exampleParameter);
        }
    
        public virtual int KarkardHaftegy()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KarkardHaftegy");
        }
    
        public virtual int KarkardHaftegyrowwHafteChand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KarkardHaftegyrowwHafteChand");
        }
    
        public virtual ObjectResult<KarkardHaftegyST_Result> KarkardHaftegyST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KarkardHaftegyST_Result>("KarkardHaftegyST");
        }
    
        public virtual int order_by_CountLevel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("order_by_CountLevel");
        }
    
        public virtual int ProgreadReadWordDaily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProgreadReadWordDaily");
        }
    
        public virtual int ProgreadReadWordDailyRoozBeRooz(Nullable<int> sDate, Nullable<int> eDate)
        {
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(int));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProgreadReadWordDailyRoozBeRooz", sDateParameter, eDateParameter);
        }
    
        public virtual int Show_Karkard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Show_Karkard");
        }
    
        public virtual int Show_Karkard961004()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Show_Karkard961004");
        }
    
        public virtual int ShowKarkadPivot(string sdate, string edate, string roozHafte)
        {
            var sdateParameter = sdate != null ?
                new ObjectParameter("Sdate", sdate) :
                new ObjectParameter("Sdate", typeof(string));
    
            var edateParameter = edate != null ?
                new ObjectParameter("Edate", edate) :
                new ObjectParameter("Edate", typeof(string));
    
            var roozHafteParameter = roozHafte != null ?
                new ObjectParameter("RoozHafte", roozHafte) :
                new ObjectParameter("RoozHafte", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShowKarkadPivot", sdateParameter, edateParameter, roozHafteParameter);
        }
    
        public virtual int ShowKarkadPivotNotParam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShowKarkadPivotNotParam");
        }
    
        public virtual int update_add_timeword(Nullable<int> id, Nullable<int> addTime)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var addTimeParameter = addTime.HasValue ?
                new ObjectParameter("addTime", addTime) :
                new ObjectParameter("addTime", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_add_timeword", idParameter, addTimeParameter);
        }
    
        public virtual int update_level(Nullable<int> id, Nullable<int> level, string date_refresh)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var date_refreshParameter = date_refresh != null ?
                new ObjectParameter("date_refresh", date_refresh) :
                new ObjectParameter("date_refresh", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_level", idParameter, levelParameter, date_refreshParameter);
        }
    
        public virtual int UpdateExample(Nullable<int> id, Nullable<int> id_dic_tbl, string example)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_dic_tblParameter = id_dic_tbl.HasValue ?
                new ObjectParameter("id_dic_tbl", id_dic_tbl) :
                new ObjectParameter("id_dic_tbl", typeof(int));
    
            var exampleParameter = example != null ?
                new ObjectParameter("example", example) :
                new ObjectParameter("example", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateExample", idParameter, id_dic_tblParameter, exampleParameter);
        }
    
        public virtual int UpdateTaghvimSetHafteChandom()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTaghvimSetHafteChandom");
        }
    
        public virtual int ShowKarkadPivotDateToDate(string sdate, string edate, string userId)
        {
            var sdateParameter = sdate != null ?
                new ObjectParameter("Sdate", sdate) :
                new ObjectParameter("Sdate", typeof(string));
    
            var edateParameter = edate != null ?
                new ObjectParameter("Edate", edate) :
                new ObjectParameter("Edate", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShowKarkadPivotDateToDate", sdateParameter, edateParameter, userIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<CreateTeam_Result> CreateTeam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CreateTeam_Result>("CreateTeam");
        }
    
        public virtual int ListVoteToPlayers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListVoteToPlayers");
        }
    
        public virtual int ShowKarkadPivotDateToDate970519(string sdate, string edate)
        {
            var sdateParameter = sdate != null ?
                new ObjectParameter("Sdate", sdate) :
                new ObjectParameter("Sdate", typeof(string));
    
            var edateParameter = edate != null ?
                new ObjectParameter("Edate", edate) :
                new ObjectParameter("Edate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShowKarkadPivotDateToDate970519", sdateParameter, edateParameter);
        }
    
        public virtual int ShowKarkadPivotDateToDate970618(string sdate, string edate, string userId)
        {
            var sdateParameter = sdate != null ?
                new ObjectParameter("Sdate", sdate) :
                new ObjectParameter("Sdate", typeof(string));
    
            var edateParameter = edate != null ?
                new ObjectParameter("Edate", edate) :
                new ObjectParameter("Edate", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShowKarkadPivotDateToDate970618", sdateParameter, edateParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_ManageTime_Result> SP_ManageTime(string date, string userId)
        {
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ManageTime_Result>("SP_ManageTime", dateParameter, userIdParameter);
        }
    
        public virtual ObjectResult<ListGroupHazine_Result> ListGroupHazine(string userId, Nullable<int> daramadOrKharj)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var daramadOrKharjParameter = daramadOrKharj.HasValue ?
                new ObjectParameter("DaramadOrKharj", daramadOrKharj) :
                new ObjectParameter("DaramadOrKharj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListGroupHazine_Result>("ListGroupHazine", userIdParameter, daramadOrKharjParameter);
        }
    
        public virtual ObjectResult<PersianToEnglish_Result> PersianToEnglish(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PersianToEnglish_Result>("PersianToEnglish", userIdParameter);
        }
    }
}
